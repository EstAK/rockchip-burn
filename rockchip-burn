#!/bin/sh

## hyphop ##

#= Rockchip burn online
#< https://github.com/hyphop/rockchip-burn

## WIP ...

HELP(){ cat <<HELP
USAGE rockchip-burn [ARGS]

EXAMPLES

    curl dl.khadas.com/online/rockchip-burn | sh -s - oowow --write --spi

HELP
exit
}

LOADER=${LOADER-rk3588_spl_loader_v1.07.111.bin}
TOOL=${TOOL-upgrade_tool}

TOOL_DL=${TOOL_DL-https://raw.githubusercontent.com/khadas/utils/master/rk-flash-tool/tools/Linux_Upgrade_Tool/$TOOL}
LOADER_DL=${LOADER_DL-https://dl.radxa.com/rock5/sw/images/loader/$LOADER}

TOOL_HOME=~/upgrade_tool
TOOL_BIN=$TOOL_HOME/bin

get=$(which curl || which wget)

FAIL(){
    echo "[e] $@">&2
    exit 1
}
MSG(){
    echo "[i] $@"
}
CMD(){
    echo "### $@">&2
    "$@"
}

[ "$get" ] || {
    MSG "need install wget or curl"
    exit 2
}

GET(){
    (
    [ "$3" ] && CMD cd "$3"

    case $get in
	*wget*)
	CMD wget "$2" -O"$1"
	;;
	*curl*)
	CMD curl -R -jkL "$2" -o"$1"
	;;
    esac
    )
}

CHK(){
    [ -s "$3$1.okay" ] || {
	GET "$@" && md5sum "$3$1" > "$3$1.okay"
    }
}

mkdir -p $TOOL_BIN || FAIL "mkdir $TOOL_BIN"
mkdir -p $TOOL_HOME/dl || FAIL "mkdir dl"

(
cd $TOOL_BIN || FAIL "cd $TOOL_BIN"
CHK "$TOOL" "$TOOL_DL"

[ -x "$TOOL" ] || chmod 0755 $TOOL

CHK "$LOADER" "$LOADER_DL"

)

CMD cd $TOOL_HOME || FAIL "cd fail"

DST=${DST-emmc}
TYPE=sd

for a in "$@"; do
    case $a in
	--clean)
	MODE=clean
	;;
	--spi)
	DST=spi
	TYPE=spi
	;;
	--write)
	MODE=write
	;;
	-h|--help)
	MODE=help
	;;
	*)
	SRC=$a
	;;
    esac
done

[ "$MODE" ] || HELP
[ "$MODE" = help ] && HELP

export PATH="$TOOL_BIN:$PATH"
#echo $PATH

which $TOOL || FAIL "cant find $TOOL"

BOARD=${BOARD-edge2}

case $SRC in
    oowow)
    DL=http://dl.khadas.com/products/oowow/system/
    FILE=$BOARD-oowow-latest-$TYPE.img.gz
    ;;
esac

PKG=dl/$FILE
IMG=${PKG%.*}

CHK "$FILE" "$DL$FILE" dl/ || FAIL "oops $FILE"

gz=$(which pigz || which gzip)

case $PKG in
    *.gz)
    MSG "decompress $PKG wait..."
    CMD $gz -dc $PKG > $IMG || FAIL "decompress fail"
    ;;
esac

MSG "write $IMG to $DST wait..."

while [ "1" ]; do
    $TOOL LD | grep Mode=Maskrom && break
    echo "[i] $(date) wait device ..." && sleep 1
done

echo "[i] check is ready ..."
$TOOL TD || $TOOL DB bin/$LOADER || exit 4

RESET_CMD="echo RD 0"

case $DST in
    spi)
(
sleep 1
echo 1
echo RCB
sleep 2
echo SSD
echo 5
echo WL 0 $IMG
$RESET_CMD
echo Q
) | $TOOL && echo "\n[i] OKAY done"
    ;;
    emmc)
    CMD $TOOL WL 0 "$IMG" && echo "\n[i] OKAY done"
    ;;
esac
